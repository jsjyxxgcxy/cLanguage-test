#include <stdio.h>
int main()
{
  int arr[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
  int(*p)[10] = &arr;
  return 0;
}
// int main()
// {
//   int arr1[5] = {1, 2, 3, 4, 5};
//   int arr2[5] = {2, 3, 4, 5, 6};
//   int arr3[5] = {3, 4, 5, 6, 7};
//   int *parr[3] = {arr1, arr2, arr3};
//   int i = 0;
//   for (i = 0; i < 3; i++)
//   {
//     int j = 0;
//     for (j = 0; j < 5; j++)
//     {
//       printf("%d ", *(parr[i] + j));
//     }
//     printf("\n");
//   }
//   return 0;
// }
// int main()
// {
//   char *p = "abcdef";
//   *p = 'w';
//   //  printf("%c\n", *p);
//   printf("%s\n", p);
//   return 0;
// }
#include <stdio.h>
void dy(int (*p)[5], int x, int y)
{
  int i = 0;
  for (i = 0; i < x; i++)
  {
    int j;
    for (j = 0; j < y; j++)
    {
      printf("%d ", *(*(p + i) + j));
    }
    printf("\n");
  }
}
int main()
{
  int arr[3][5] = {{1, 2, 3, 4, 5}, {2, 3, 4, 5, 6}, {3, 4, 5, 6, 7}};
  dy(arr, 3, 5);
  return 0;
}
// #include <stdio.h>
// int main()
// {
//   int arr[10][10] = {0};
//   int i = 0;
//   for (i = 0; i < 10; i++)
//   {
//     int j = 0;
//     for (j = 0; j < i + 1; j++)
//     {
//       if (i == j)
//         arr[i][j] = 1;
//       else
//         arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j];
//     }
//     for (j = 0; j < i + 1; j++)
//     {
//       printf("%3d ", arr[i][j]);
//     }
//     printf("\n");
//   }
//   return 0;
// }
